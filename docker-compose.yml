version: "3.1"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: aks-app
    container_name: app
    restart: unless-stopped
    environment:
      DB_HOST: mysql
      DB_PASSWORD: ro30182
      SESSION_DRIVE: redis
      REDIS_HOST: redis
    volumes:
#      - ./:/var/www
      - ./config/php/local.ini:/usr/local/etc.php/conf./local.ini

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    restart: always
    ports:
      - "81:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - html:/usr/share/nginx/html:ro #:ro
  www:
    build:
      context: .
      dockerfile: Dockerfile_Nginx
    image: aks-www
    container_name: www
    restart: unless-stopped
    expose:
      - "80"
    privileged: true
    volumes:
      - ./:/usr/share/nginx/html:ro
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - ./etc/letsencrypt/live:/etc/nginx/ssl
    environment:
      - VIRTUAL_HOST=americakingstones.com,www.americakingstones.com
      - LETSENCRYPT_HOST=americakingstones.com,www.americakingstones.com
      - LETSENCRYPT_EMAIL=ronygonzalezv1987@gmail.com
      - LETSENCRYPT_TEST=true
#      - HTTPS_METHOD=noredirect

    depends_on:
      - app
      - nginx-proxy
 #     - letsencrypt
 #     - aks_dns

  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    ports:
      - 3306:3306
    volumes:
      - dbdata:/var/lib/mysql
    environment:
      MYSQL_USER: rgonzalezv1987
      MYSQL_ROOT_PASSWORD: ro30182
      MYSQL_DATABASE: warehouse #Rony
  redis:
    image: redis:latest
    container_name: redis

#  aks_dns:
#    build:
#      context: .
#      dockerfile: Dockerfile_Dns
#    image: aks_dns
#    container_name: aks_dns
#    restart: unless-stopped
#    privileged: true

volumes:
  vhost.d:
  html:
  certs:
  conf:
  #acme:
  dbdata:
    driver: local
